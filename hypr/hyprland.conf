$terminal = alacritty
$shell = zsh
$menu = fuzzel
$mainMod = SUPER

# Some default env vars.
env = XCURSOR_SIZE,18

# Monitor settings
monitor=eDP-1,preferred,auto,1.2

# Floating windows
windowrulev2 = float,class:^.*pavucontrol$
windowrulev2 = size 1000 700,class:^.*pavucontrol$
windowrulev2 = center,class:^.*pavucontrol$

windowrule = float,class:firefox.*$,title:Library
windowrulev2 = size 1000 700,class:firefox.*$,title:Library
windowrulev2 = center,class:firefox.*$,title:Library

input {
    kb_layout = no
    follow_mouse = 1

    touchpad {
        natural_scroll = yes
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    gaps_in = 0
    gaps_out = 0
    border_size = 1
    col.inactive_border = 0x595959aa

    layout = dwindle
}

decoration {
    rounding = 3

    shadow {
        enabled = true
        range = 4
        render_power = 3
        color = 0x1a1a1aee
    }

    blur {
        enabled = true
        size = 3
        passes = 1
    }

}

animations {
    enabled = yes
    bezier = overshoot, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 4, default      # styles: slide, popin, gnomed
    animation = windowsIn, 1, 3, default    # window open zoom
    animation = windowsOut, 1, 7, default   # window close
    animation = windowsMove, 1, 4, default  # window moving (moving, dragging, resizing)

    #animation = layers                     # styles: slide, popin, fade
    #animation = layersIn                   # layer open
    #animation = layersOut                  # layer close

    animation = fade, 1, 4, default
    animation = fadeIn, 1, 3, default       # fade in for window open
    animation = fadeOut, 1, 4, default      # fade out for window close
    animation = fadeSwitch, 1, 2, default   # fade on changing activewindow and its opacity
    animation = fadeShadow, 1, 2, default   # fade on changing activewindow for shadows
    animation = fadeDim, 1, 2, default      # the easing of the dimming of inactive windows
    #animation = fadeLayers                 # for controlling fade on layers
    #animation = fadeLayersIn               # fade in for layer open
    #animation = fadeLayersOut              # fade out for layer close

    animation = border, 0, 1, default       # for animating the border's color switch speed
    animation = borderangle, 0, 1, default  # for animating the border's gradient angle - styles: once (default), loop

    animation = workspaces, 1, 3, default           # Workspace switching
    animation = specialWorkspace, 1, 3, default     # styles: same as workspaces
}

dwindle {
    pseudotile = yes        # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes    # you probably want this
}

gestures {
    workspace_swipe = off
}

misc {
    force_default_wallpaper = -1 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true
}

xwayland {
  force_zero_scaling = true
}

$exitPrompt = "Exit Hyprland?"
$exitConfig = ~/.config/fuzzel/exit-confirm.conf
$exit = bash -c '[ "$(echo -e "No\nYes" | fuzzel --config $exitConfig  --dmenu --prompt $exitPrompt)" = "Yes" ] && hyprctl dispatch exit'

bind = $mainMod, Return, exec,$terminal
bind = $mainMod_SHIFT, Q, killactive,
#bind = $mainMod_SHIFT, E, exit,
bind = $mainMod_SHIFT, E, exec, $exit
bind = $mainMod, V, togglefloating
bind = $mainMod, F, fullscreen
bind = $mainMod, D, exec, $menu
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Move window with mainMod + SHIFT + arrow keys
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

bind = $mainMod, L, exec, hyprlock

# Screenshot with notification
$ssAppName = Grim
$ssFolder = $HOME/Pictures/Screenshots/

# Save screenshot to folder
$ssFile="$ssFolder/$(date +'%Y-%m-%d_%H-%M-%S_grim.png')"
$ssNoti = notify-send -i $ssFile '$ssAppName' 'Screenshot saved to ~/Pictures/Screenshots/' --app-name='$ssAppName'
$ssCmd = bash -c "grim $ssFile && $ssNoti"
$ssSelCmd = bash -c "grim -g '$(slurp)' $ssFile && $ssNoti"

# Save screenshot to clipboard
$ssNotiClip = notify-send "$ssAppName" -i /tmp/clipboard.png "Screenshot copied to clipboard" --app-name="$ssAppName"
$ssNotiImageClip = wl-paste > /tmp/clipboard.png && ($ssNotiClip; rm /tmp/clipboard.png)
$ssCmdClip = bash -c 'grim - | wl-copy && $ssNotiImageClip'
$ssSelCmdClip = bash -c 'r=$(slurp); [ -n "$r" ] && grim -g "$r" - | wl-copy && $ssNotiImageClip'

# Media keys
bindl=, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle         # Audio Mute
bindle=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-  # Audio Down
bindle=, XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+  # Audo Up
bindl=, XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle    # Mic Mute
bindle=, XF86MonBrightnessDown, exec, brightnessctl set 10%- > /dev/null        # Brightness Down
bindle=, XF86MonBrightnessUp, exec, brightnessctl set +10% > /dev/null          # Brightness Up
#bind=, XF86Display, exec,                                                      # Switch Video Mode
# F8
bind=, Print, exec, $ssCmdClip                                                  # Print Screen
bind=, XF86SelectiveScreenshot, exec, $ssSelCmdClip                             # Shift Selective Screenshot
bindl=shift, Print, exec, $ssCmd                                                # Shift Print Screen
bind=shift, XF86SelectiveScreenshot, exec, $ssSelCmd                            # Shift Selective Screenshot
# F11
#bind=, XF86Favorites, exec,                                                    # Bookmarks/Favorites

bind = $mainMod SHIFT, S, exec, $ssSelCmdClip

# Color picker
bind = $mainMod SHIFT, C, exec, hyprpicker -a

# Switch to resize mode
bind = $mainMod, R, submap, resize
submap=resize

binde=,right,resizeactive,10 0
binde=,left,resizeactive,-10 0
binde=,up,resizeactive,0 -10
binde=,down,resizeactive,0 10

# Switch back to the global keybinds
bind=,escape,submap,reset
submap=reset

# Switch to move mode
bind = $mainMod, M, submap, move
submap=move

binde=,right,moveactive,20 0
binde=,left,moveactive,-20 0
binde=,up,moveactive,0 -20
binde=, down, moveactive,0 20

# Switch back to the global keybinds
bind=,escape,submap,reset
submap=reset

bindl =, switch:on:Lid Switch, exec, hyprctl dispatch dpms off
bindl =, switch:off:Lid Switch, exec, hyprctl dispatch dpms on

# Background
exec-once = hyprpaper

# Statur bar
exec-once = waybar

# Notifications
exec-once = swaync

# Lock screen timer
exec-once = swayidle -w \
    timeout 1200 'hyprlock && hyprctl dispatch dpms off' \
    resume 'hyprctl dispatch dpms on' \
    before-sleep 'hyprlock'
